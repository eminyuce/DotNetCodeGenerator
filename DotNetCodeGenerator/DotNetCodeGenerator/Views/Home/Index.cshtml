@using DotNetCodeGenerator.Domain.Entities;
@using DotNetCodeGenerator.Domain.Helpers;
@using GridMvc.Html
@using GridMvc.Sorting

@model CodeGeneratorResult
@{
    ViewBag.Title = "Home Page";
    var gridModel = Model.DatabaseMetadata != null ? Model.DatabaseMetadata.SelectedTable.TableRowMetaDataList : new List<TableRowMetaData>();
    // Grid controls for ASP.NET MVC 5 projects http://mvc-grid.azurewebsites.net/

    var emptyList = new List<SelectListItem>();
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CodeGeneratorResult</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <input type="hidden" value="@Model.SelectedTable.ToStr()" id="SelectedTableValue" />
        <div>
            <div class="bs-example">
                <div class="alert alert-success fade in">
                    <a href="#" class="close" data-dismiss="alert">&times;</a>
                    <strong>@Model.UserMessageState.ToString()!</strong> @Model.UserMessage.ToStr()
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ConnectionString, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConnectionString, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConnectionString, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.MySqlConnectionString, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MySqlConnectionString, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MySqlConnectionString, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SelectedTable,
           htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("SelectedTable", emptyList, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SelectedTable, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    <input type="button" id="RetrieveTables" value="Get Tables" />
                </div>
                <div class="col-md-3">
                    <input type="text" id="TextBox_Filter" placeholder="Filter Table Names" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedTableName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedTableName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedTableName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NameSpace, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NameSpace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameSpace, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StringCodePattern, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StringCodePattern, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StringCodePattern, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsMethodStatic, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsMethodStatic)
                        @Html.ValidationMessageFor(model => model.IsMethodStatic, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StoredProcExecCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                        @Html.EditorFor(model => model.StoredProcExecCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StoredProcExecCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="btnAction" value="Fill GridView" class="btn btn-default" />
                    <input type="submit" name="btnAction" value="Generate Code" class="btn btn-default" />
                </div>
            </div>

        </div>


        






    </div>
}


<div class="container">
    <div class="form-horizontal">
        <div class="panel-group" id="accordion">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion" href="#collapse1" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#">User Input</a>
                    </h4>
                </div>
                <div id="collapse1" class="panel-collapse collapse">

                    <div class="panel-body">

                        @Html.Grid(gridModel).Named("TableColumnsRowMetaData").Columns(columns =>
                    {


                        columns.Add(o => o.ID, true);

                        columns.Add()
               .Encoded(false)
               .Sanitized(false)
                .Css("gridButtons")
               .RenderValueAs(d => Html.Partial("pGridCheckbox", new ViewDataDictionary(ViewData){
            {"ItemId",d.ID}}));


                        columns.Add(c => c.ColumnName)
                                  .Titled("ColumnName")
                                  .Filterable(true);


                        columns.Add(o => o.ForeignKey)
                           .Encoded(false).
                                Sanitized(false).
                                SetWidth(10).
                                RenderValueAs(o => String.Format("<input   value='{0}-{1}'  name='ForeignKey' type='checkbox'>", o.ID, o.ForeignKey));




                        columns.Add(c => c.DataType)
                           .Titled("DataType")
                           .Filterable(true);

                        columns.Add(c => c.IsNull);
                        columns.Add(c => c.MaxChar);
                        columns.Add(c => c.DataTypeMaxChar);


                        columns.Add(o => o.Order)
                           .Encoded(false).
                                Sanitized(false).
                                SetWidth(10).
                                RenderValueAs(o => String.Format("<input   value='{1}'   class='input-xs' name='gridOrdering' type='type'>", o.ID, o.Order));


                    }).WithPaging(1000).Sortable().Filterable().WithMultipleFilters().Selectable(false)



                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion" href="#collapse2" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#">Mvc Controller</a>
                    </h4>
                </div>
                <div id="collapse2" class="panel-collapse collapse">
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.AspMvcControllerClass, htmlAttributes: new { @class= "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion" href="#collapse3" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#"> Repository</a>
                    </h4>
                </div>
                <div id="collapse3" class="panel-collapse collapse">
                    <div class="panel-body">


                     
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.TableRepository, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                                </div>
                        </div>


                            

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.SqlDatabaseOperation, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                                </div>
                            </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                <a target="_blank" href="http://www.format-sql.com" class="btn btn-info">Format Sql</a>
                                @Html.TextAreaFor(model => model.SqlSaveOrUpdateStoredProc, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion" href="#collapse4" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#">Table Class</a>
                    </h4>
                </div>
                <div id="collapse4" class="panel-collapse collapse">
                    <div class="panel-body">



                     

                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.TableClassItem, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                                </div>
                            </div>

                        
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.TableClassInstance, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>




                    </div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion" href="#collapse5" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#">Stored Procedure</a>
                    </h4>
                </div>
                <div id="collapse5" class="panel-collapse collapse">
                    <div class="panel-body">
                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.StoredProcExec, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                                </div>
                        </div>



                            <div class="form-group">
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.StoredProcExecModel, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                                </div>
                            </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.StoredProcExecModelDataReader, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion"
                         href="#collapse6" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#">Mysql Database Operation</a>
                    </h4>
                </div>
                <div id="collapse6" class="panel-collapse collapse">
                    <div class="panel-body">

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.MySqlDatabaseOperation, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-12">
                                <a target="_blank" href="http://www.dpriver.com/pp/sqlformat.htm" class="btn btn-info">Format MySql</a>
                                @Html.TextAreaFor(model => model.MySqlSaveOrUpdateStoredProc, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 data-toggle="collapse" data-parent="#accordion"
                        href="#collapse7" class="panel-title expand">
                        <div class="right-arrow pull-right">+</div>
                        <a href="#">Web Api Controller</a>
                    </h4>
                </div>
                <div id="collapse7" class="panel-collapse collapse">
                    <div class="panel-body">

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.WebApiController, htmlAttributes: new { @class = "form-control text-box multi-line", @rows = 50 })
                            </div>
                        </div>
                       
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<input id="TableCopied" type="hidden" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(function () {
            $(".expand").on("click", function () {
                // $(this).next().slideToggle(200);
                $expand = $(this).find(">:first-child");

                if ($expand.text() == "+") {
                    $expand.text("-");
                } else {
                    $expand.text("+");
                }
            });
        });
        $(document).ready(function () {


            var $TextBox_Filter = $('#TextBox_Filter');
            var $ddl = $('#SelectedTable');
            var $items = $('select[id$=SelectedTable] option');

            $("#TextBox_Filter")
    .blur(filter)
    .keyup(filter)
    .change(filter);

          
            function filter() {
                var keyword = $TextBox_Filter.val();
                if (isEmpty(keyword)) {
                    $('#SelectedTable').find('option').remove();
                    $('#SelectedTable').append($('#TableCopied').val());
                    return;
                }
                 

                var select = $ddl[0];
                for (var i = 0; i < select.length; i++) {
                    var txt = select.options[i].text;
                    if (txt.toLowerCase().indexOf(keyword.toLowerCase()) == -1) {
                        $(select.options[i]).attr('disabled', 'disabled').hide();
                    } else {
                        $(select.options[i]).removeAttr('disabled').show();
                    }
                }
            }




          $("#RetrieveTables").click(function () {
              fillTables();
          });

          fillTables();
          function fillTables() {
              if (!isEmpty($("#ConnectionString").val()) || !isEmpty($("#MySqlConnectionString").val())) {
                  var postData = JSON.stringify({ "connectionString": $("#ConnectionString").val(), "MySqlConnectionString": $("#MySqlConnectionString").val() });
                  ajaxMethodCall(postData, "/Ajax/GetTables", function (data) {
                      var listitems = '';
                      $('#SelectedTable').find('option').remove();
                      var SelectedTableValue = $("#SelectedTableValue").val();
                      $.each(data, function (i, item) {

                          var isSelected= SelectedTableValue == item.DatabaseTableName ? "selected='true'":"";
                          listitems += '<option ' + isSelected + ' value=' + item.DatabaseTableName + '>'
                              + item.TableNameWithSchema + '</option>';
                      });
                      $('#TableCopied').val(listitems);
                      $('#SelectedTable').append(listitems);
                  });
              }
          }
          $('#SelectedTable').on('change', function () {
              $('#ModifiedTableName').val(this.value);
          });

      });

    </script>
}
@*spring.datasource.url=jdbc:mysql://localhost:3306/polbot2?useSSL=false
# Username and password
spring.datasource.username=polbot
spring.datasource.password=145145145*@